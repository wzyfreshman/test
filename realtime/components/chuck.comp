component chuck "Chuck controller";

pin in bit manual_in;
pin in bit run12_in;
pin in bit run13_in;
pin in bit spindle_on;
pin in bit program_idle;
pin out bit out=0 "Goes high when the desired edge is seen on 'in'";
pin out bit out_invert=1 "Goes low when the desired edge is seen on 'in'";

param rw bit in_edge=FALSE "Selects the desired edge: TRUE means falling, FALSE means rising";

param r bit last_in "Previous input value";
param r bit last_run12_in "Previous input value";
param r bit last_run13_in "Previous input value";

function _;
license "GPL";
;;

FUNCTION(_) { 
    int new_in = manual_in;
    if(in_edge) new_in = ! new_in;
    if(program_idle == 1) { 
	    if(new_in && new_in != last_in) {
		 if(spindle_on == 0) {
			out_invert = out; out = !out;
		 } 
	    }
	   if(run12_in != last_run12_in && out == 0) {
	       out = 1; out_invert = 0;
    	    }
	   if(run13_in != last_run13_in && out == 1) {
		if(spindle_on == 0) {
		    out = 0; out_invert = 1;
		}
	    }
    } else {
	   if(run12_in != last_run12_in && out == 0) {
	       out = 1; out_invert = 0;
    	    }
	   if(run13_in != last_run13_in && out == 1) {
		if(spindle_on == 0) {
		    out = 0; out_invert = 1;
		}
	    }
    }
    
    last_in = new_in;
    last_run12_in = run12_in;
    last_run13_in = run13_in;
}


